{"ast":null,"code":"var _jsxFileName = \"/home/pranavkv/sps/weekly tasks/week 14/Usermanagement/front_end/src/Components/usermanagement/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport api from \"../../axios\";\nimport './view_user.css';\nimport { AuthContext } from '../../context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddUser() {\n  _s();\n\n  const navigate = useNavigate();\n  const [errorMessage, setError] = useState(); //====================== Validation ===========================\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // ===================== useref settting ==============\n\n  const inputRef = useRef();\n  const {\n    ref,\n    ...rest\n  } = register(\"username\", {\n    required: \"Full name must be filled\"\n  });\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []); //=====================================================\n\n  const onSubmit = data => {\n    console.log(data);\n    api.post(\"/addUser\", { ...data\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.success === true) {\n        navigate(\"/users\");\n      } else {\n        console.log(response.data.error);\n        setError(response.data.error);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  console.log(errors);\n  console.log(errors.phone, errors.email, errors.password);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"totalBody\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxLogin\",\n        children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontSize: \"0.8rem\"\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Add User \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: [errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\",\n                fontSize: \"0.8rem\"\n              },\n              children: errors.username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"inputLogin\",\n              placeholder: \"Enter your full name\",\n              name: \"username\",\n              ...rest,\n              ref: e => {\n                ref(e);\n                inputRef.current = e;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\",\n                fontSize: \"0.8rem\"\n              },\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"inputLogin\",\n              placeholder: \"Enter your email Address\",\n              name: \"email\",\n              ...register(\"email\", {\n                required: \"Email must be filled\",\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"invalid email address\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\",\n                fontSize: \"0.8rem\"\n              },\n              children: errors.phone.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"inputLogin\",\n              placeholder: \"Enter your phone\",\n              name: \"phone\",\n              ...register(\"phone\", {\n                required: \"Phone is required\",\n                minLength: {\n                  value: 10,\n                  message: \"phone must have length of 10\"\n                },\n                maxLength: {\n                  value: 10,\n                  message: \"phone must have length of 10\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\",\n                fontSize: \"0.8rem\"\n              },\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"inputLogin\",\n              placeholder: \"Enter the password\",\n              name: \"password\",\n              ...register(\"password\", {\n                required: \"Password is required\",\n                minLength: {\n                  value: 6,\n                  message: \"password must contain atleast 6 characters\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\",\n                fontSize: \"0.8rem\"\n              },\n              children: errors.confirmPassword.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"inputLogin\",\n              placeholder: \"Confirm the password\",\n              name: \"password\",\n              ...register(\"confirmPassword\", {\n                required: \"Password is required\",\n                minLength: {\n                  value: 6,\n                  message: \"password must contain atleast 6 characters\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submitButton\",\n              children: [\" \", \"Sign Up\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"ifK0Q8yCcc/Uxp687gJHlmLkIeo=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/pranavkv/sps/weekly tasks/week 14/Usermanagement/front_end/src/Components/usermanagement/AddUser.js"],"names":["React","useState","useRef","useEffect","useContext","useNavigate","useForm","api","AuthContext","AddUser","navigate","errorMessage","setError","register","handleSubmit","formState","errors","inputRef","ref","rest","required","current","focus","onSubmit","data","console","log","post","then","response","success","error","catch","err","phone","email","password","color","fontSize","username","message","e","pattern","value","minLength","maxLength","confirmPassword"],"mappings":"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","sourcesContent":["import React, { useState , useRef , useEffect , useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport api from \"../../axios\";\nimport './view_user.css';\nimport {AuthContext} from '../../context/context'\n\n\nfunction AddUser() {\n  \n    \n  const navigate = useNavigate();\n  const [errorMessage, setError] = useState();\n\n\n  //====================== Validation ===========================\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n// ===================== useref settting ==============\n  \n  const inputRef = useRef();\n  const { ref , ...rest } = register(\"username\", {\n    required: \"Full name must be filled\",\n  });\n\n  useEffect(()=>{\n    inputRef.current.focus();\n  },[])\n\n//=====================================================\n \n\n  const onSubmit = (data) => {\n    console.log(data);\n    api.post(\"/addUser\", { ...data }).then((response) => {\n      console.log(response);\n      if (response.data.success === true) {\n        navigate(\"/users\");\n      } else {\n        console.log(response.data.error);\n        setError(response.data.error);\n      }\n    })\n      .catch((err)=> {\n        console.log(err);\n      })\n  };\n  console.log(errors);\n  console.log(errors.phone, errors.email, errors.password);\n  return (\n    <div className=\"totalBody\">\n      <div className=\"container\">\n        <div className=\"boxLogin\">\n          {errorMessage && (\n            <p style={{ color: \"red\", fontSize: \"0.8rem\" }}>{errorMessage}</p>\n          )}\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <h1> Add User </h1>\n            <div className=\"input\">\n              {errors.username && (\n                <p style={{ color: \"red\", fontSize: \"0.8rem\" }}>\n                  {errors.username.message}\n                </p>\n              )}\n              <input\n                type=\"text\"\n                className=\"inputLogin\"\n                placeholder=\"Enter your full name\"\n                name=\"username\"\n                {...rest}\n                ref = { (e)=>{\n                  ref(e)\n                  inputRef.current = e\n                } }\n              />\n\n              {errors.email && (\n                <p style={{ color: \"red\", fontSize: \"0.8rem\" }}>\n                  {errors.email.message}\n                </p>\n              )}\n\n              <input\n                type=\"email\"\n                className=\"inputLogin\"\n                placeholder=\"Enter your email Address\"\n                name=\"email\"\n                {...register(\"email\", {\n                  required: \"Email must be filled\",\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"invalid email address\",\n                  },\n                })}\n              />\n\n              {errors.phone && (\n                <p style={{ color: \"red\", fontSize: \"0.8rem\" }}>\n                  {errors.phone.message}\n                </p>\n              )}\n\n              <input\n                type=\"number\"\n                className=\"inputLogin\"\n                placeholder=\"Enter your phone\"\n                name=\"phone\"\n                {...register(\"phone\", {\n                  required: \"Phone is required\",\n                  minLength: {\n                    value: 10,\n                    message: \"phone must have length of 10\",\n                  },\n                  maxLength: {\n                    value: 10,\n                    message: \"phone must have length of 10\",\n                  },\n                })}\n              />\n\n              {errors.password && (\n                <p style={{ color: \"red\", fontSize: \"0.8rem\" }}>\n                  {errors.password.message}\n                </p>\n              )}\n\n              <input\n                type=\"password\"\n                className=\"inputLogin\"\n                placeholder=\"Enter the password\"\n                name=\"password\"\n                {...register(\"password\", {\n                  required: \"Password is required\",\n                  minLength: {\n                    value: 6,\n                    message: \"password must contain atleast 6 characters\",\n                  },\n                })}\n              />\n\n              {errors.confirmPassword && (\n                <p style={{ color: \"red\", fontSize: \"0.8rem\" }}>\n                  {errors.confirmPassword.message}\n                </p>\n              )}\n\n              <input\n                type=\"password\"\n                className=\"inputLogin\"\n                placeholder=\"Confirm the password\"\n                name=\"password\"\n                {...register(\"confirmPassword\", {\n                  required: \"Password is required\",\n                  minLength: {\n                    value: 6,\n                    message: \"password must contain atleast 6 characters\",\n                  },\n                })}\n              />\n            </div>\n\n            <div className=\"submit\">\n              <button type=\"submit\" className=\"submitButton\">\n                {\" \"}\n                Sign Up{\" \"}\n              </button>\n              \n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}